services:

  pihole:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "pihole"

    entrypoint:
      - "/s6-init"

    environment:
      - "TZ=America/New_York"
      - "WEBPASSWORD=thecowsaysgrr"
      - "PATH=/opt/pihole:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "phpver=php"
      - "PHP_ERROR_LOG=/var/log/lighttpd/error-pihole.log"
      - "IPv6=True"
      - "S6_KEEP_ENV=1"
      - "S6_BEHAVIOUR_IF_STAGE2_FAILS=2"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "FTLCONF_LOCAL_IPV4=0.0.0.0"
      - "FTL_CMD=no-daemon"
      - "DNSMASQ_USER=pihole"

    hostname: "DietPi"

    image: "pihole/pihole:latest"

    ipc: "private"

    labels:
      org.opencontainers.image.created: "2023-03-25T19:18:44.609Z"
      org.opencontainers.image.description: "Pi-hole in a docker container"
      org.opencontainers.image.licenses: ""
      org.opencontainers.image.revision: "aeb42394738aa652845c652b45438fb1edcfbbee"
      org.opencontainers.image.source: "https://github.com/pi-hole/docker-pi-hole"
      org.opencontainers.image.title: "docker-pi-hole"
      org.opencontainers.image.url: "https://github.com/pi-hole/docker-pi-hole"
      org.opencontainers.image.version: "2023.03.1"

    logging:
      driver: "journald"
      options: {}

    network_mode: "host"

    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"

    restart: "always"

    volumes:
      - "pihole:/etc/pihole"
      - "dnsmasq-pihole:/etc/dnsmasq.d"

  plex:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "plex"

    devices:
      - "/dev/dri:/dev/dri"

    entrypoint:
      - "/init"

    environment:
      - "DEBIAN_FRONTEND=noninteractive"
      - "HOME=/root"
      - "LANG=en_US.UTF-8"
      - "LANGUAGE=en_US.UTF-8"
      - "LSIO_FIRST_PARTY=true"
      - "NVIDIA_DRIVER_CAPABILITIES=compute,video,utility"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "PGID=1000"
      - "PLEX_ARCH=amd64"
      - "PLEX_CLAIM=claim-T7aWLeSAvPaEDrV6Btwu"
      - "PLEX_DOWNLOAD=https://downloads.plex.tv/plex-media-server-new"
      - "PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR=/config/Library/Application Support"
      - "PLEX_MEDIA_SERVER_HOME=/usr/lib/plexmediaserver"
      - "PLEX_MEDIA_SERVER_INFO_DEVICE=Docker Container (LinuxServer.io)"
      - "PLEX_MEDIA_SERVER_INFO_VENDOR=Docker"
      - "PLEX_MEDIA_SERVER_MAX_PLUGIN_PROCS=6"
      - "PLEX_MEDIA_SERVER_USER=abc"
      - "PUID=1000"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "S6_STAGE2_HOOK=/docker-mods"
      - "S6_VERBOSITY=1"
      - "TERM=xterm"
      - "TZ=America/New_York"

    expose:
      - "1900/udp"
      - "3005/tcp"
      - "32400/tcp"
      - "32410/udp"
      - "32412/udp"
      - "32413/udp"
      - "32414/udp"
      - "32469/tcp"
      - "5353/udp"
      - "8324/tcp"

    hostname: "DietPi"

    image: "linuxserver/plex:latest"

    ipc: "private"

    labels:
      build_version: "Linuxserver.io version:- 1.30.2.6563-3d4dc0cce-ls151 Build-date:-\
        \ 2023-02-09T21:12:09+01:00"
      maintainer: "thelamer"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2023-02-09T21:12:09+01:00"
      org.opencontainers.image.description: "[Plex](https://plex.tv) organizes video,\
        \ music and photos from personal media libraries and streams them to smart\
        \ TVs, streaming boxes and mobile devices. This container is packaged as a\
        \ standalone Plex Media Server. has always been a top priority. Straightforward\
        \ design and bulk actions mean getting things done faster."
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-plex"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "35597783c6530f609ca2bb711b9399dd07efa7fd"
      org.opencontainers.image.revision: "35597783c6530f609ca2bb711b9399dd07efa7fd"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-plex"
      org.opencontainers.image.title: "Plex"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-plex/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "1.30.2.6563-3d4dc0cce-ls151"

    logging:
      driver: "journald"
      options: {}

    network_mode: "host"

    restart: "always"

    volumes:
      - "plex-config:/config"
      - "/mnt/drivepool:/tv"
      - "/mnt/drivepool:/movies"

    working_dir: "/"

  portainer:

    container_name: "portainer"

    entrypoint:
      - "/portainer"

    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "PORTAINER_LICENSE_KEY=2-hRU01S19LR0M4oGiXH03qW4m33ouE4pSirM/K/yhOSGb2RteV1b4LSsW58rsuCHojq4i+cGn6Zg="

    hostname: "31f86db2261b"

    image: "portainer/portainer-ee:2.18.3"

    ipc: "private"

    labels:

      com.docker.desktop.extension.api.version: ">= 0.2.2"

      com.docker.desktop.extension.icon: "https://portainer-io-assets.sfo2.cdn.digitaloceanspaces.com/logos/portainer.png"

      com.docker.extension.additional-urls: "[{\"title\":\"Website\",\"url\":\"https://www.portainer.io?utm_campaign=DockerCon&utm_source=DockerDesktop\"\
        },{\"title\":\"Documentation\",\"url\":\"https://docs.portainer.io\"},{\"\
        title\":\"Support\",\"url\":\"https://join.slack.com/t/portainer/shared_invite/zt-txh3ljab-52QHTyjCqbe5RibC2lcjKA\"\
        }]"

      com.docker.extension.detailed-description: "<p data-renderer-start-pos=\"226\"\
        >Portainer&rsquo;s Docker Desktop extension gives you access to all of Portainer&rsquo;s\
        \ rich management functionality within your docker desktop experience.</p><h2\
        \ data-renderer-start-pos=\"374\">With Portainer you can:</h2><ul><li>See\
        \ all your running containers</li><li>Easily view all of your container logs</li><li>Console\
        \ into containers</li><li>Easily deploy your code into containers using a\
        \ simple form</li><li>Turn your YAML into custom templates for easy reuse</li></ul><h2\
        \ data-renderer-start-pos=\"660\">About Portainer&nbsp;</h2><p data-renderer-start-pos=\"\
        680\">Portainer is the worlds&rsquo; most popular universal container management\
        \ platform with more than 650,000 active monthly users. Portainer can be used\
        \ to manage Docker Standalone, Kubernetes, Docker Swarm and Nomad environments\
        \ through a single common interface. It includes a simple GitOps automation\
        \ engine and a Kube API.&nbsp;</p><p data-renderer-start-pos=\"1006\">Portainer\
        \ Business Edition is our fully supported commercial grade product for business-wide\
        \ use. It includes all the functionality that businesses need to manage containers\
        \ at scale. Visit <a class=\"sc-jKJlTe dPfAtb\" href=\"http://portainer.io/\"\
        \ title=\"http://Portainer.io\" data-renderer-mark=\"true\">Portainer.io</a>\
        \ to learn more about Portainer Business and <a class=\"sc-jKJlTe dPfAtb\"\
        \ href=\"http://portainer.io/take5?utm_campaign=DockerCon&amp;utm_source=Docker%20Desktop\"\
        \ title=\"http://portainer.io/take5?utm_campaign=DockerCon&amp;utm_source=Docker%20Desktop\"\
        \ data-renderer-mark=\"true\">get 5 free nodes.</a></p>"

      com.docker.extension.publisher-url: "https://www.portainer.io"

      com.docker.extension.screenshots: "[{\"alt\": \"screenshot one\", \"url\": \"\
        https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-1.png\"\
        },{\"alt\": \"screenshot two\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-2.png\"\
        },{\"alt\": \"screenshot three\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-3.png\"\
        },{\"alt\": \"screenshot four\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-4.png\"\
        },{\"alt\": \"screenshot five\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-5.png\"\
        },{\"alt\": \"screenshot six\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-6.png\"\
        },{\"alt\": \"screenshot seven\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-7.png\"\
        },{\"alt\": \"screenshot eight\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-8.png\"\
        },{\"alt\": \"screenshot nine\", \"url\": \"https://portainer-io-assets.sfo2.digitaloceanspaces.com/screenshots/docker-extension-9.png\"\
        }]"

      io.portainer.server: "true"

      org.opencontainers.image.description: "Docker container management made simple,\
        \ with the world’s most popular GUI-based container management platform."

      org.opencontainers.image.title: "Portainer"

      org.opencontainers.image.vendor: "Portainer.io"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:03"

    network_mode: "bridge"

    ports:
      - "9002:9000/tcp"

    restart: "always"

    volumes:
      - "/run/docker.sock:/var/run/docker.sock"
      - "portainer_data:/data"

    working_dir: "/"

  portainer_agent:
    container_name: "portainer_agent"
    entrypoint:
      - "./agent"
    environment:
      - "PATH=/app:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    hostname: "3290a5d52710"
    image: "portainer/agent:2.18.2"
    ipc: "private"
    labels:
      io.portainer.agent: "true"
    logging:
      driver: "journald"
      options: {}
    mac_address: "02:42:ac:11:00:05"
    network_mode: "bridge"
    ports:
      - "9001:9001/tcp"
    restart: "always"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/var/lib/docker/volumes:/var/lib/docker/volumes"
    working_dir: "/app"

  tdarr-node:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "tdarr-node"

    devices:
      - "/dev/dri:/dev/dri"

    entrypoint:
      - "/init"

    environment:
      - "nodeID=PlexServer"
      - "serverIP=192.168.1.79"
      - "serverPort=8266"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "HOME=/home/Tdarr"
      - "LANGUAGE=en_US.UTF-8"
      - "LANG=en_US.UTF-8"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri"
      - "LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu"
      - "NVIDIA_DRIVER_CAPABILITIES=compute,video,utility"
      - "NVIDIA_VISIBLE_DEVICES=all"
      - "HANDBRAKE=1.6.1"
      - "WEB_UI_PORT=8265"
      - "SERVER_PORT=8266"
      - "NODE_PORT=8267"
      - "PUID=1000"
      - "PGID=1000"
      - "UMASK=002"
      - "TZ=America/New_York"

    hostname: "d5342824eb5f"

    image: "ghcr.io/haveagitgat/tdarr_node:2.00.18.2"

    ipc: "private"

    labels:
      build_version: "Linuxserver.io version:- 9ebe5da5-ls105 Build-date:- 2023-01-31T05:46:21+01:00"
      maintainer: "TheLamer"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2023-01-31T05:46:21+01:00"
      org.opencontainers.image.description: "baseimage-ubuntu image by linuxserver.io"
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-baseimage-ubuntu"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "f50a66e46cf4ee6052aed60c235bf041dffd3070"
      org.opencontainers.image.revision: "f50a66e46cf4ee6052aed60c235bf041dffd3070"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-baseimage-ubuntu"
      org.opencontainers.image.title: "Baseimage-ubuntu"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-baseimage-ubuntu/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "9ebe5da5-ls105"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:02"

    network_mode: "bridge"

    ports:
      - "8267:8267/tcp"

    restart: "always"

    security_opt:
      - "label=disable"

    volumes:
      - "tdarr-config:/app/configs"
      - "tdarr-logs:/app/logs"
      - "/mnt/drivepool:/drivepool/media"
      - "/mnt/drivepool:/drivepool/transcode_cache"

    working_dir: "/"

  watchtower:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "watchtower"

    entrypoint:
      - "/watchtower"

    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "WATCHTOWER_CLEANUP=true"

    expose:
      - "8080/tcp"

    hostname: "b2d245e600ac"

    image: "containrrr/watchtower:latest"

    ipc: "private"

    labels:
      com.centurylinklabs.watchtower: "true"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:04"

    network_mode: "bridge"

    restart: "always"

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

    working_dir: "/"

version: "3.6"

volumes:
  dnsmasq-pihole:
    external: yes
  pihole:
    external: yes
  plex-config:
    external: yes
  portainer_data:
    external: yes
  tdarr-config:
    external: yes
  tdarr-logs:
    external: yes
