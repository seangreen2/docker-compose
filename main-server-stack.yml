services:

  archive-warrior:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "archive-warrior"

    entrypoint:
      - "python"
      - "start.py"

    environment:
      - "PYTHON_VERSION=3.9.5"
      - "PYTHON_PIP_VERSION=21.1.1"
      - "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/1954f15b3f102ace496a34a013ea76b061535bd2/public/get-pip.py"
      - "PYTHON_GET_PIP_SHA256=f499d76e0149a673fb8246d88e116db589afbd291739bd84f2cd9a7bca7b6993"
      - "WARRIOR_ID=SneakyPie"
      - "CONCURRENT_ITEMS=3"
      - "SELECTED_PROJECT=reddit"
      - "PATH=/home/warrior/.local/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "LANG=C.UTF-8"
      - "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568"
      - "PYTHON_SETUPTOOLS_VERSION=58.1.0"
      - "LC_ALL=C"

    hostname: "081e30b01804"

    image: "atdr.meo.ws/archiveteam/warrior-dockerfile:latest"

    ipc: "private"

    labels:
      org.opencontainers.image.created: "2021-06-08T14:03:49Z"
      org.opencontainers.image.revision: "54a26b7546c21191fbbf0b45f4984ea8a1567287"
      org.opencontainers.image.source: "https://github.com/ArchiveTeam/warrior-dockerfile.git"
      org.opencontainers.image.url: "https://github.com/ArchiveTeam/warrior-dockerfile"
      version: "20230408.01"
      wget-at.version: "1.21.3-at.20230208.01"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:0f"

    network_mode: "bridge"

    ports:
      - "8001:8001/tcp"

    restart: "always"

    user: "warrior"

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

    working_dir: "/home/warrior"

  bazarr:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "bazarr"

    entrypoint:
      - "/init"

    environment:
      - "PUID=1000"
      - "PGID=1000"
      - "PS1=$(whoami)@$(hostname):$(pwd)\\$"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "HOME=/root"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "S6_VERBOSITY=1"
      - "S6_STAGE2_HOOK=/docker-mods"
      - "LSIO_FIRST_PARTY=true"
      - "TZ=Etc/UTC"

    hostname: "367b342a563b"

    image: "docker.io/linuxserver/bazarr:latest"

    ipc: "private"

    labels:
      build_version: "Linuxserver.io version:- v1.2.1-ls195 Build-date:- 2023-05-09T21:24:05+00:00"
      maintainer: "chbmb"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2023-05-09T21:24:05+00:00"
      org.opencontainers.image.description: "[Bazarr](https://www.bazarr.media/) is\
        \ a companion application to Sonarr and Radarr. It can manage and download\
        \ subtitles based on your requirements. You define your preferences by TV\
        \ show or movie and Bazarr takes care of everything for you."
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-bazarr"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "f55cf1c5884e4dc1cde0745752261803ea137524"
      org.opencontainers.image.revision: "f55cf1c5884e4dc1cde0745752261803ea137524"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-bazarr"
      org.opencontainers.image.title: "Bazarr"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-bazarr/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "v1.2.1-ls195"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:0e"

    network_mode: "bridge"

    ports:
      - "6767:6767/tcp"

    restart: "unless-stopped"

    volumes:
      - "bazarr_data:/config"
      - "/mnt/drivepool:/drivepool"
      - "/mnt/drivepool/Movies:/movies"
      - "/mnt/drivepool/TV Shows:/tv"

    working_dir: "/"

  duplicati:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "duplicati"

    entrypoint:
      - "/init"

    environment:
      - "PUID=0"
      - "PGID=0"
      - "TZ=America/New_York"
      - "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "HOME=/config"
      - "LANGUAGE=en_US.UTF-8"
      - "LANG=en_US.UTF-8"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "S6_VERBOSITY=1"
      - "S6_STAGE2_HOOK=/docker-mods"
      - "VIRTUAL_ENV=/lsiopy"
      - "LSIO_FIRST_PARTY=true"
      - "DEBIAN_FRONTEND=noninteractive"

    hostname: "9ad36532006f"

    image: "docker.io/linuxserver/duplicati:latest"

    ipc: "private"

    labels:
      build_version: "Linuxserver.io version:- v2.0.6.3-2.0.6.3_beta_2021-06-17-ls167\
        \ Build-date:- 2023-05-20T03:51:31+00:00"
      maintainer: "aptalca"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2023-05-20T03:51:31+00:00"
      org.opencontainers.image.description: "[Duplicati](https://www.duplicati.com/)\
        \ works with standard protocols like FTP, SSH, WebDAV as well as popular services\
        \ like Microsoft OneDrive, Amazon Cloud Drive & S3, Google Drive, box.com,\
        \ Mega, hubiC and many others."
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-duplicati"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "34fe8df98ec78de5e63eca32ce0ab2c5f3ed53e9"
      org.opencontainers.image.revision: "34fe8df98ec78de5e63eca32ce0ab2c5f3ed53e9"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-duplicati"
      org.opencontainers.image.title: "Duplicati"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-duplicati/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "v2.0.6.3-2.0.6.3_beta_2021-06-17-ls167"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:13"

    network_mode: "bridge"

    ports:
      - "8200:8200/tcp"

    privileged: yes

    restart: "always"

    security_opt:
      - "label=disable"

    volumes:
      - "duplicati-data:/config"
      - "/mnt/drivepool:/backups"
      - "/mnt:/source"

    working_dir: "/"

  homepage:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    command:
      - "node"
      - "server.js"

    container_name: "homepage"

    entrypoint:
      - "docker-entrypoint.sh"

    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "NODE_VERSION=18.16.0"
      - "YARN_VERSION=1.22.19"
      - "NODE_ENV=production"
      - "PORT=3000"

    hostname: "63727d0f4815"

    image: "ghcr.io/benphelps/homepage:latest"

    ipc: "private"

    labels:
      org.opencontainers.image.created: "2023-05-19T21:32:24.975Z"
      org.opencontainers.image.description: "A highly customizable homepage (or startpage\
        \ / application dashboard) with Docker and service API integrations."
      org.opencontainers.image.documentation: "https://github.com/benphelps/homepage/wiki"
      org.opencontainers.image.licenses: "GPL-3.0"
      org.opencontainers.image.revision: "6046f7911e6661b9fe348e016194a31bea611be6"
      org.opencontainers.image.source: "https://github.com/benphelps/homepage"
      org.opencontainers.image.title: "homepage"
      org.opencontainers.image.url: "https://github.com/benphelps/homepage"
      org.opencontainers.image.version: "v0.6.20"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:12"

    network_mode: "bridge"

    ports:
      - "3000:3000/tcp"

    restart: "unless-stopped"

    volumes:
      - "homepage-data:/app/config"

    working_dir: "/app"

  mealie:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "mealie"

    entrypoint:
      - "/bin/sh"
      - "-c"
      - "$MEALIE_HOME/mealie/run.sh"

    environment:
      - "PATH=/opt/poetry/bin:/opt/pysetup/.venv/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "LANG=C.UTF-8"
      - "GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568"
      - "PYTHON_VERSION=3.9.10"
      - "PYTHON_PIP_VERSION=21.2.4"
      - "PYTHON_SETUPTOOLS_VERSION=58.1.0"
      - "PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/3cb8888cc2869620f57d5d2da64da38f516078c7/public/get-pip.py"
      - "PYTHON_GET_PIP_SHA256=c518250e91a70d7b20cceb15272209a4ded2a0c263ae5776f129e0d9b5674309"
      - "MEALIE_HOME=/app"
      - "PYTHONUNBUFFERED=1"
      - "PYTHONDONTWRITEBYTECODE=1"
      - "PIP_NO_CACHE_DIR=off"
      - "PIP_DISABLE_PIP_VERSION_CHECK=on"
      - "PIP_DEFAULT_TIMEOUT=100"
      - "POETRY_HOME=/opt/poetry"
      - "POETRY_VIRTUALENVS_IN_PROJECT=true"
      - "POETRY_NO_INTERACTION=1"
      - "PYSETUP_PATH=/opt/pysetup"
      - "VENV_PATH=/opt/pysetup/.venv"
      - "PRODUCTION=true"
      - "APP_PORT=80"
      - "PUID=1000"
      - "PGID=1000"

    hostname: "edd5d46cffbe"

    image: "docker.io/hkotel/mealie:latest"

    ipc: "private"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:07"

    network_mode: "bridge"

    ports:
      - "9925:80/tcp"

    restart: "always"

    volumes:
      - "mealie_data:/app/data"

    working_dir: "/"

  nginx-proxy-manager:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "nginx-proxy-manager"

    entrypoint:
      - "/init"

    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt"
      - "OPENRESTY_VERSION=1.21.4.1"
      - "CROWDSEC_OPENRESTY_BOUNCER_VERSION=0.1.7"
      - "CURL_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt"
      - "SUPPRESS_NO_CONFIG_WARNING=1"
      - "S6_BEHAVIOUR_IF_STAGE2_FAILS=1"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "S6_FIX_ATTRS_HIDDEN=1"
      - "S6_KILL_FINISH_MAXTIME=10000"
      - "S6_VERBOSITY=1"
      - "NODE_ENV=production"
      - "NPM_BUILD_VERSION=2.10.3"
      - "NPM_BUILD_COMMIT=824c837"
      - "NPM_BUILD_DATE=2023-05-10 04:56:28 UTC"

    hostname: "DietPi"

    image: "docker.io/jc21/nginx-proxy-manager:latest"

    ipc: "private"

    labels:
      maintainer: "Jamie Curnow <jc@jc21.com>"
      org.label-schema.cmd: "docker run --rm -ti jc21/nginx-proxy-manager:latest"
      org.label-schema.description: "Docker container for managing Nginx proxy hosts\
        \ with a simple, powerful interface "
      org.label-schema.license: "MIT"
      org.label-schema.name: "nginx-proxy-manager"
      org.label-schema.schema-version: "1.0"
      org.label-schema.url: "https://github.com/jc21/nginx-proxy-manager"
      org.label-schema.vcs-url: "https://github.com/jc21/nginx-proxy-manager.git"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:11"

    network_mode: "bridge"

    ports:
      - "443:443/tcp"
      - "80:80/tcp"
      - "81:81/tcp"

    restart: "always"

    volumes:
      - "nginx-proxy-manager-data:/data"
      - "lets-encrypt-nginx:/letsencrypt"
      - "1e40e97b0dc40857962d45087b0a862a171760a87350dfe1cb79f241351b2bc1:/etc/letsencrypt"

    working_dir: "/app"

  omada-controller:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    command:
      - "/usr/bin/java"
      - "-server"
      - "-Xms128m"
      - "-Xmx1024m"
      - "-XX:MaxHeapFreeRatio=60"
      - "-XX:MinHeapFreeRatio=30"
      - "-XX:+HeapDumpOnOutOfMemoryError"
      - "-XX:HeapDumpPath=/opt/tplink/EAPController/logs/java_heapdump.hprof"
      - "-Djava.awt.headless=true"
      - "-cp"
      - "/opt/tplink/EAPController/lib/*::/opt/tplink/EAPController/properties:"
      - "com.tplink.smb.omada.starter.OmadaLinuxMain"

    container_name: "omada-controller"

    entrypoint:
      - "/entrypoint.sh"

    environment:
      - "MANAGE_HTTP_PORT=8088"
      - "MANAGE_HTTPS_PORT=8043"
      - "PORTAL_HTTP_PORT=8088"
      - "PORTAL_HTTPS_PORT=8043"
      - "SHOW_MONGODB_LOGS=false"
      - "SHOW_SERVER_LOGS=true"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

    hostname: "25d216dcca34"

    image: "docker.io/mbentley/omada-controller:latest"

    ipc: "private"

    labels:
      maintainer: "Matt Bentley <mbentley@mbentley.net>"
      org.opencontainers.image.source: "https://github.com/mbentley/docker-omada-controller"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:03"

    network_mode: "bridge"

    ports:
      - "27001:27001/udp"
      - "29810:29810/udp"
      - "29811:29811/tcp"
      - "29812:29812/tcp"
      - "29813:29813/tcp"
      - "29814:29814/tcp"
      - "8043:8043/tcp"
      - "8088:8088/tcp"

    restart: "always"

    volumes:
      - "omada-data:/opt/tplink/EAPController/data"
      - "omada-logs:/opt/tplink/EAPController/logs"
      - "omada-work:/opt/tplink/EAPController/work"

    working_dir: "/opt/tplink/EAPController/lib"

  overseer:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "overseer"

    entrypoint:
      - "/init"

    environment:
      - "PUID=1000"
      - "PGID=1000"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "PS1=$(whoami)@$(hostname):$(pwd)\\$ "
      - "HOME=/config"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "S6_VERBOSITY=1"
      - "S6_STAGE2_HOOK=/docker-mods"
      - "LSIO_FIRST_PARTY=true"

    hostname: "3dd0c0747933"

    image: "docker.io/linuxserver/overseerr:latest"

    ipc: "private"

    labels:
      build_version: "Linuxserver.io version:- v1.32.5-ls64 Build-date:- 2023-05-10T18:35:47+00:00"
      maintainer: "nemchik"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2023-05-10T18:35:47+00:00"
      org.opencontainers.image.description: "[Overseerr](https://overseerr.dev/) is\
        \ a request management and media discovery tool built to work with your existing\
        \ Plex ecosystem.  "
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-overseerr"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "0bc69f18683a0a23bb2804ec2858a42aaff9aa96"
      org.opencontainers.image.revision: "0bc69f18683a0a23bb2804ec2858a42aaff9aa96"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-overseerr"
      org.opencontainers.image.title: "Overseerr"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-overseerr/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "v1.32.5-ls64"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:0c"

    network_mode: "bridge"

    ports:
      - "5000:5055/tcp"

    restart: "always"

    volumes:
      - "overseer_config:/config"

    working_dir: "/"

  pihole:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "pihole"

    entrypoint:
      - "/s6-init"

    environment:
      - "TZ=America/New_york"
      - "WEBPASSWORD=thecowsaysgrr"
      - "PATH=/opt/pihole:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "phpver=php"
      - "PHP_ERROR_LOG=/var/log/lighttpd/error-pihole.log"
      - "IPv6=True"
      - "S6_KEEP_ENV=1"
      - "S6_BEHAVIOUR_IF_STAGE2_FAILS=2"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "FTLCONF_LOCAL_IPV4=0.0.0.0"
      - "FTL_CMD=no-daemon"
      - "DNSMASQ_USER=pihole"

    hostname: "DietPi"

    image: "docker.io/pihole/pihole:latest"

    ipc: "private"

    labels:
      org.opencontainers.image.created: "2023-03-25T19:18:44.609Z"
      org.opencontainers.image.description: "Pi-hole in a docker container"
      org.opencontainers.image.licenses: ""
      org.opencontainers.image.revision: "aeb42394738aa652845c652b45438fb1edcfbbee"
      org.opencontainers.image.source: "https://github.com/pi-hole/docker-pi-hole"
      org.opencontainers.image.title: "docker-pi-hole"
      org.opencontainers.image.url: "https://github.com/pi-hole/docker-pi-hole"
      org.opencontainers.image.version: "2023.03.1"

    logging:
      driver: "journald"
      options: {}

    network_mode: "host"

    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "8888:80/tcp"

    restart: "unless-stopped"

    volumes:
      - "dnsmasq-pihole:/etc/dnsmasq.d"
      - "pihole:/etc/pihole"

  plex_meta_manager:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "plex_meta_manager"

    entrypoint:
      - "/init-pmm"

    environment:
      - "PUID=1000"
      - "PGID=1000"
      - "PS1=$(whoami)@$(hostname):$(pwd)\\$"
      - "PMM_RUN=false"
      - "PMM_OVERLAYS=true"
      - "PMM_TIME=05:00"
      - "TZ=America/New_York"
      - "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "HOME=/config"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "S6_VERBOSITY=1"
      - "S6_STAGE2_HOOK=/init-hook"
      - "VIRTUAL_ENV=/lsiopy"
      - "LSIO_FIRST_PARTY=true"
      - "PYTHONIOENCODING=utf-8"

    hostname: "9f9ab2ab77ed"

    image: "docker.io/linuxserver/plex-meta-manager:latest"

    ipc: "private"

    labels:
      build_version: "Linuxserver.io version:- v1.19.0-ls61 Build-date:- 2023-05-19T19:57:08+00:00"
      maintainer: "thespad"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2023-05-19T19:57:08+00:00"
      org.opencontainers.image.description: "[Plex-meta-manager](https://github.com/meisnate12/Plex-Meta-Manager)\
        \ is a Python 3 script that can be continuously run using YAML configuration\
        \ files to update on a schedule the metadata of the movies, shows, and collections\
        \ in your libraries as well as automatically build collections based on various\
        \ methods all detailed in the wiki."
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-plex-meta-manager"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "d2634a0dd39a2672f96fd03c77b8b82328bb4276"
      org.opencontainers.image.revision: "d2634a0dd39a2672f96fd03c77b8b82328bb4276"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-plex-meta-manager"
      org.opencontainers.image.title: "Plex-meta-manager"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-plex-meta-manager/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "v1.19.0-ls61"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:0a"

    network_mode: "bridge"

    restart: "unless-stopped"

    volumes:
      - "plex-meta-manager:/config"

    working_dir: "/"

  portainer:
    container_name: "portainer"
    entrypoint:
      - "/portainer"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    hostname: "0c313ebde98f"
    image: "portainer/portainer-ee:latest"
    ipc: "private"
    labels:
      io.portainer.server: "true"
    logging:
      driver: "journald"
      options: {}
    mac_address: "02:42:ac:11:00:05"
    network_mode: "bridge"
    ports:
      - "8000:8000/tcp"
      - "9000:9000/tcp"
    restart: "always"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainer_data:/data"
    working_dir: "/"

  prowlarr:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "prowlarr"

    entrypoint:
      - "/init"

    environment:
      - "PUID=1000"
      - "PGID=1000"
      - "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "PS1=$(whoami)@$(hostname):$(pwd)\\$ "
      - "HOME=/root"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "S6_VERBOSITY=1"
      - "S6_STAGE2_HOOK=/docker-mods"
      - "VIRTUAL_ENV=/lsiopy"
      - "LSIO_FIRST_PARTY=true"
      - "XDG_CONFIG_HOME=/config/xdg"

    hostname: "bb34c4061b76"

    image: "linuxserver/prowlarr:develop"

    ipc: "private"

    labels:
      build_version: "Linuxserver.io version:- 1.3.1.2796-ls94 Build-date:- 2023-03-03T16:57:57+01:00"
      maintainer: "Roxedus,thespad"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2023-03-03T16:57:57+01:00"
      org.opencontainers.image.description: "[Prowlarr](https://github.com/Prowlarr/Prowlarr)\
        \ is a indexer manager/proxy built on the popular arr .net/reactjs base stack\
        \ to integrate with your various PVR apps. Prowlarr supports both Torrent\
        \ Trackers and Usenet Indexers. It integrates seamlessly with Sonarr, Radarr,\
        \ Lidarr, and Readarr offering complete management of your indexers with no\
        \ per app Indexer setup required (we do it all).  "
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-prowlarr"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "d95213ac2985ffa5a4c85606bbfbf63c305d39e7"
      org.opencontainers.image.revision: "d95213ac2985ffa5a4c85606bbfbf63c305d39e7"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-prowlarr"
      org.opencontainers.image.title: "Prowlarr"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-prowlarr/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "1.3.1.2796-ls94"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:06"

    network_mode: "bridge"

    ports:
      - "9696:9696/tcp"

    restart: "always"

    volumes:
      - "prowlarr_data:/config"

    working_dir: "/"

  radarr:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "radarr"

    entrypoint:
      - "/init"

    environment:
      - "PUID=1000"
      - "PGID=1000"
      - "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "PS1=$(whoami)@$(hostname):$(pwd)\\$ "
      - "HOME=/root"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "S6_VERBOSITY=1"
      - "S6_STAGE2_HOOK=/docker-mods"
      - "VIRTUAL_ENV=/lsiopy"
      - "LSIO_FIRST_PARTY=true"
      - "XDG_CONFIG_HOME=/config/xdg"

    hostname: "c02b428f68bc"

    image: "docker.io/linuxserver/radarr:latest"

    ipc: "private"

    labels:
      build_version: "Linuxserver.io version:- 4.4.4.7068-ls172 Build-date:- 2023-05-21T16:56:45+00:00"
      maintainer: "thelamer"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2023-05-21T16:56:45+00:00"
      org.opencontainers.image.description: "[Radarr](https://github.com/Radarr/Radarr)\
        \ - A fork of Sonarr to work with movies à la Couchpotato.  "
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-radarr"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "553a44d22f44992137a3a5fa51cc184b49349fd2"
      org.opencontainers.image.revision: "553a44d22f44992137a3a5fa51cc184b49349fd2"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-radarr"
      org.opencontainers.image.title: "Radarr"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-radarr/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "4.4.4.7068-ls172"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:08"

    network_mode: "bridge"

    ports:
      - "7878:7878/tcp"

    restart: "always"

    volumes:
      - "/mnt/drivepool:/drivepool/media"
      - "/mnt/drivepool:/drivepool/downloads"
      - "radarr-config:/config"
      - "/mnt/drivepool:/drivepool"

    working_dir: "/"

  sonarr:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "sonarr"

    entrypoint:
      - "/init"

    environment:
      - "PUID=1000"
      - "PGID=1000"
      - "PATH=/lsiopy/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "HOME=/root"
      - "LANGUAGE=en_US.UTF-8"
      - "LANG=en_US.UTF-8"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "S6_VERBOSITY=1"
      - "S6_STAGE2_HOOK=/docker-mods"
      - "VIRTUAL_ENV=/lsiopy"
      - "LSIO_FIRST_PARTY=true"
      - "XDG_CONFIG_HOME=/config/xdg"
      - "SONARR_BRANCH=main"

    hostname: "8b038108efb1"

    image: "docker.io/linuxserver/sonarr:latest"

    ipc: "private"

    labels:
      build_version: "Linuxserver.io version:- 3.0.10.1567-ls192 Build-date:- 2023-05-19T23:31:16+00:00"
      maintainer: "aptalca"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2023-05-19T23:31:16+00:00"
      org.opencontainers.image.description: "[Sonarr](https://sonarr.tv/) (formerly\
        \ NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple\
        \ RSS feeds for new episodes of your favorite shows and will grab, sort and\
        \ rename them. It can also be configured to automatically upgrade the quality\
        \ of files already downloaded when a better quality format becomes available.\
        \  "
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-sonarr"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "bb277ec947c2f4f592ca0badea9b769e5027305f"
      org.opencontainers.image.revision: "bb277ec947c2f4f592ca0badea9b769e5027305f"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-sonarr"
      org.opencontainers.image.title: "Sonarr"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-sonarr/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "3.0.10.1567-ls192"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:0d"

    network_mode: "bridge"

    ports:
      - "8989:8989/tcp"

    restart: "always"

    volumes:
      - "sonarr_config:/config"
      - "/mnt/drivepool:/drivepool"

    working_dir: "/"

  stash:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    command:
      - "stash"

    container_name: "stash"

    environment:
      - "STASH_CACHE=/cache/"
      - "STASH_GENERATED=/generated/"
      - "STASH_METADATA=/metadata/"
      - "STASH_PORT=9999"
      - "STASH_STASH=/data/"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "STASH_CONFIG_FILE=/root/.stash/config.yml"

    hostname: "3aabe829dbcd"

    image: "docker.io/stashapp/stash:latest"

    ipc: "private"

    labels:
      com.docker.compose.config-hash: "d7d0da02804309174b8a93a7beeddf610326c1d103ac83347b69defd062aad5b"
      com.docker.compose.container-number: "1"
      com.docker.compose.depends_on: ""
      com.docker.compose.oneoff: "False"
      com.docker.compose.project: "stashapp"
      com.docker.compose.project.config_files: "/root/stashapp/docker-compose.yml"
      com.docker.compose.project.working_dir: "/root/stashapp"
      com.docker.compose.service: "stash"
      com.docker.compose.version: "2.6.0"

    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "2m"

    networks:
      - "stashapp_default"

    ports:
      - "9999:9999/tcp"

    restart: "always"

    volumes:
      - "/root/stashapp/metadata:/metadata"
      - "/root/stashapp/config:/root/.stash"
      - "/root/stashapp/cache:/cache"
      - "/root/stashapp/data:/data"
      - "/mnt/drivepool:/drivepool"
      - "/etc/localtime:/etc/localtime:ro"
      - "/root/stashapp/generated:/generated"

  tautulli:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "tautulli"

    entrypoint:
      - "/init"

    environment:
      - "PGID=1000"
      - "PS1=$(whoami)@$(hostname):$(pwd)\\$"
      - "PUID=1000"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "HOME=/root"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "S6_VERBOSITY=1"
      - "S6_STAGE2_HOOK=/docker-mods"
      - "LSIO_FIRST_PARTY=true"
      - "TAUTULLI_DOCKER=True"

    hostname: "a99ea53634f2"

    image: "docker.io/linuxserver/tautulli:latest"

    ipc: "private"

    labels:
      build_version: "Linuxserver.io version:- v2.12.1-ls71 Build-date:- 2023-03-14T21:57:26+01:00"
      maintainer: "nemchik,thelamer"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2023-03-14T21:57:26+01:00"
      org.opencontainers.image.description: "[Tautulli](http://tautulli.com) is a\
        \ python based web application for monitoring, analytics and notifications\
        \ for Plex Media Server."
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-tautulli"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "f9dd78c9c63f197b6ba3ac146b61bc6dab1109fc"
      org.opencontainers.image.revision: "f9dd78c9c63f197b6ba3ac146b61bc6dab1109fc"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-tautulli"
      org.opencontainers.image.title: "Tautulli"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-tautulli/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "v2.12.1-ls71"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:10"

    network_mode: "bridge"

    ports:
      - "8181:8181/tcp"

    restart: "always"

    volumes:
      - "/mnt/drivepool:/drivepool"
      - "tautulli_data:/config"

    working_dir: "/"

  tdarr:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "tdarr"

    devices:
      - "/dev/dri:/dev/dri"

    entrypoint:
      - "/init"

    environment:
      - "HANDBRAKE=1.5.1"
      - "internalNode=true"
      - "nodeID=Server-Node"
      - "serverIP=0.0.0.0"
      - "serverPort=8266"
      - "webUIPort=8265"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "HOME=/home/Tdarr"
      - "LANGUAGE=en_US.UTF-8"
      - "LANG=en_US.UTF-8"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "LIBVA_DRIVERS_PATH=/usr/lib/x86_64-linux-gnu/dri"
      - "LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu"
      - "NVIDIA_DRIVER_CAPABILITIES=compute,video,utility"
      - "NVIDIA_VISIBLE_DEVICES=all"
      - "WEB_UI_PORT=8265"
      - "SERVER_PORT=8266"
      - "NODE_PORT=8267"
      - "PUID=1000"
      - "PGID=1000"
      - "UMASK=002"
      - "TZ=America/New_York"

    hostname: "c4900c8d87cb"

    image: "docker.io/haveagitgat/tdarr:2.00.18.2"

    ipc: "private"

    labels:
      build_version: "Linuxserver.io version:- fa335518-ls75 Build-date:- 2022-05-17T07:05:13+02:00"
      maintainer: "TheLamer"
      org.opencontainers.image.authors: "linuxserver.io"
      org.opencontainers.image.created: "2022-05-17T07:05:13+02:00"
      org.opencontainers.image.description: "baseimage-ubuntu image by linuxserver.io"
      org.opencontainers.image.documentation: "https://docs.linuxserver.io/images/docker-baseimage-ubuntu"
      org.opencontainers.image.licenses: "GPL-3.0-only"
      org.opencontainers.image.ref.name: "024f16e2eced4dd05a8400fbeba4bfd6fc1005b1"
      org.opencontainers.image.revision: "024f16e2eced4dd05a8400fbeba4bfd6fc1005b1"
      org.opencontainers.image.source: "https://github.com/linuxserver/docker-baseimage-ubuntu"
      org.opencontainers.image.title: "Baseimage-ubuntu"
      org.opencontainers.image.url: "https://github.com/linuxserver/docker-baseimage-ubuntu/packages"
      org.opencontainers.image.vendor: "linuxserver.io"
      org.opencontainers.image.version: "fa335518-ls75"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:0b"

    network_mode: "bridge"

    ports:
      - "8265:8265/tcp"
      - "8266:8266/tcp"

    privileged: yes

    restart: "always"

    security_opt:
      - "label=disable"

    volumes:
      - "tdarr-configs:/app/configs"
      - "tdarr-logs:/app/logs"
      - "tdarr-server:/app/server"
      - "/mnt/drivepool:/drivepool/media"
      - "/mnt/drivepool:/drivepool/transcode_cache"

    working_dir: "/"

  tubesync:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "tubesync"

    entrypoint:
      - "/init"

    environment:
      - "PGID=1000"
      - "PUID=1000"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "DEBIAN_FRONTEND=noninteractive"
      - "HOME=/root"
      - "LANGUAGE=en_US.UTF-8"
      - "LANG=en_US.UTF-8"
      - "LC_ALL=en_US.UTF-8"
      - "TERM=xterm"
      - "S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0"
      - "PYTHONPATH=/app:"

    hostname: "41f93f41dcf7"

    image: "ghcr.io/meeb/tubesync:latest"

    ipc: "private"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:09"

    network_mode: "bridge"

    ports:
      - "4848:4848/tcp"

    restart: "always"

    volumes:
      - "tube_sync_data:/config"
      - "/mnt/drivepool/Youtube:/downloads"

    working_dir: "/app"

  uptime-kuma:
    command:
      - "node"
      - "server/server.js"
    container_name: "uptime-kuma"
    entrypoint:
      - "/usr/bin/dumb-init"
      - "--"
      - "extra/entrypoint.sh"
    environment:
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      - "NODE_VERSION=16.20.0"
      - "YARN_VERSION=1.22.19"
    hostname: "f65c5f3c7c13"
    image: "louislam/uptime-kuma:1"
    ipc: "private"
    logging:
      driver: "journald"
      options: {}
    mac_address: "02:42:ac:11:00:04"
    network_mode: "bridge"
    ports:
      - "3001:3001/tcp"
    restart: "always"
    volumes:
      - "uptime-kuma:/app/data"
    working_dir: "/app"

  watchtower:

    cap_drop:
      - "AUDIT_CONTROL"
      - "BLOCK_SUSPEND"
      - "DAC_READ_SEARCH"
      - "IPC_LOCK"
      - "IPC_OWNER"
      - "LEASE"
      - "LINUX_IMMUTABLE"
      - "MAC_ADMIN"
      - "MAC_OVERRIDE"
      - "NET_ADMIN"
      - "NET_BROADCAST"
      - "SYSLOG"
      - "SYS_ADMIN"
      - "SYS_BOOT"
      - "SYS_MODULE"
      - "SYS_NICE"
      - "SYS_PACCT"
      - "SYS_PTRACE"
      - "SYS_RAWIO"
      - "SYS_RESOURCE"
      - "SYS_TIME"
      - "SYS_TTY_CONFIG"
      - "WAKE_ALARM"

    container_name: "watchtower"

    entrypoint:
      - "/watchtower"

    environment:
      - "WATCHTOWER_CLEANUP=true"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

    expose:
      - "8080/tcp"

    hostname: "5562973cf20c"

    image: "docker.io/containrrr/watchtower:latest"

    ipc: "private"

    labels:
      com.centurylinklabs.watchtower: "true"

    logging:
      driver: "journald"
      options: {}

    mac_address: "02:42:ac:11:00:02"

    network_mode: "bridge"

    restart: "always"

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

    working_dir: "/"

version: "3.6"

volumes:

  1e40e97b0dc40857962d45087b0a862a171760a87350dfe1cb79f241351b2bc1:
    external: yes

  bazarr_data:
    external: yes

  dnsmasq-pihole:
    external: yes

  duplicati-data:
    external: yes

  homepage-data:
    external: yes

  lets-encrypt-nginx:
    external: yes

  mealie_data:
    external: yes

  nginx-proxy-manager-data:
    external: yes

  omada-data:
    external: yes

  omada-logs:
    external: yes

  omada-work:
    external: yes

  overseer_config:
    external: yes

  pihole:
    external: yes

  plex-meta-manager:
    external: yes

  portainer_data:
    external: yes

  prowlarr_data:
    external: yes

  radarr-config:
    external: yes

  sonarr_config:
    external: yes

  tautulli_data:
    external: yes

  tdarr-configs:
    external: yes

  tdarr-logs:
    external: yes

  tdarr-server:
    external: yes

  tube_sync_data:
    external: yes

  uptime-kuma:
    external: yes
